Terminals unused in grammar

    BOOLEAN
    DOT
    SWITCH
    CASE
    DEFAULT
    BREAK
    FSWITCH
    WHILE
    UNTIL
    FOR
    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | if_statement
    9          | if_else_statement
   10          | ε

   11 if_statement: IF expression_bool THEN marker statement_list FI marker

   12 if_else_statement: IF expression_bool THEN marker statement_then else_part FI marker

   13 else_part: ELSE marker statement_list

   14 statement_then: statement_list

   15 expression_bool: expr_bool_and
   16                | expression_bool OR marker expr_bool_and

   17 expr_bool_and: expr_bool_not
   18              | expr_bool_and AND marker expr_bool_not

   19 marker: ε

   20 expr_bool_not: NOT expr_bool_not
   21              | primary_bool

   22 primary_bool: LPAREN expression_bool RPAREN
   23             | expr_bool

   24 expr_bool: expression EQ expression
   25          | expression NE expression
   26          | expression GT expression
   27          | expression GE expression
   28          | expression LT expression
   29          | expression LE expression

   30 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   31 repeat_expression: expression

   32 assignment: ID ASSIGN expression
   33           | array_access ASSIGN expression

   34 expression: expression_list

   35 expression_list: expression_list COMMA expr_arithmetic
   36                | expr_arithmetic

   37 expr_arithmetic: expr_unary
   38                | expr_arithmetic PLUS expr_unary
   39                | expr_arithmetic MINUS expr_unary

   40 expr_unary: expr_term
   41           | PLUS expr_unary
   42           | MINUS expr_unary

   43 expr_term: factor
   44          | expr_term MULT factor
   45          | expr_term DIV factor
   46          | expr_term MOD factor

   47 factor: array_access
   48       | ID
   49       | INTEGER
   50       | STRING
   51       | REAL
   52       | PI
   53       | E
   54       | LPAREN expression RPAREN

   55 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 32 33
    ENDLINE <no_value> (259) 2
    INTEGER <integer> (260) 49
    ID <ident> (261) 32 48 55
    REAL <real> (262) 51
    STRING <string> (263) 50
    BOOLEAN <boolean> (264)
    PLUS (265) 38 41
    MINUS (266) 39 42
    MULT (267) 44
    DIV (268) 45
    MOD (269) 46
    GT (270) 26
    GE (271) 27
    LT (272) 28
    LE (273) 29
    EQ (274) 24
    NE (275) 25
    NOT (276) 20
    AND (277) 18
    OR (278) 16
    PI (279) 52
    E (280) 53
    LBRACKET (281) 55
    RBRACKET (282) 55
    LPAREN (283) 22 54
    RPAREN (284) 22 54
    COMMA (285) 35
    DOT (286)
    COMMENT (287) 6
    REPEAT <ident> (288) 30
    DO (289) 30
    DONE (290) 30
    IF <ident> (291) 11 12
    THEN (292) 11 12
    ELSE (293) 13
    FI (294) 11 12
    SWITCH (295)
    CASE (296)
    DEFAULT (297)
    BREAK (298)
    FSWITCH (299)
    WHILE (300)
    UNTIL (301)
    FOR (302)
    IN (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statement_list (51)
        on left: 2 3
        on right: 1 2 11 13 14 30
    statement (52)
        on left: 4 5 6 7 8 9 10
        on right: 2 3 6
    if_statement <ident> (53)
        on left: 11
        on right: 8
    if_else_statement <ident> (54)
        on left: 12
        on right: 9
    else_part <statement> (55)
        on left: 13
        on right: 12
    statement_then <statement> (56)
        on left: 14
        on right: 12
    expression_bool <ident> (57)
        on left: 15 16
        on right: 11 12 16 22
    expr_bool_and <ident> (58)
        on left: 17 18
        on right: 15 16 18
    marker <marker> (59)
        on left: 19
        on right: 11 12 13 16 18
    expr_bool_not <ident> (60)
        on left: 20 21
        on right: 17 18 20
    primary_bool <ident> (61)
        on left: 22 23
        on right: 21
    expr_bool <ident> (62)
        on left: 24 25 26 27 28 29
        on right: 23
    repeat_statement (63)
        on left: 30
        on right: 7
    repeat_expression <ident> (64)
        on left: 31
        on right: 30
    assignment (65)
        on left: 32 33
        on right: 4
    expression <ident> (66)
        on left: 34
        on right: 5 24 25 26 27 28 29 31 32 33 54
    expression_list <ident> (67)
        on left: 35 36
        on right: 34 35
    expr_arithmetic <ident> (68)
        on left: 37 38 39
        on right: 35 36 38 39 55
    expr_unary <ident> (69)
        on left: 40 41 42
        on right: 37 38 39 41 42
    expr_term <ident> (70)
        on left: 43 44 45 46
        on right: 40 44 45 46
    factor <ident> (71)
        on left: 47 48 49 50 51 52 53 54
        on right: 43 44 45 46
    array_access <ident> (72)
        on left: 55
        on right: 33 47


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 10 (statement)

    program            go to state 12
    statement_list     go to state 13
    statement          go to state 14
    if_statement       go to state 15
    if_else_statement  go to state 16
    repeat_statement   go to state 17
    assignment         go to state 18
    expression         go to state 19
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 25


State 1

   49 factor: INTEGER •

    $default  reduce using rule 49 (factor)


State 2

   32 assignment: ID • ASSIGN expression
   48 factor: ID •
   55 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 26
    LBRACKET  shift, and go to state 27

    $default  reduce using rule 48 (factor)


State 3

   51 factor: REAL •

    $default  reduce using rule 51 (factor)


State 4

   50 factor: STRING •

    $default  reduce using rule 50 (factor)


State 5

   41 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 29
    expr_term     go to state 23
    factor        go to state 24
    array_access  go to state 30


State 6

   42 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 31
    expr_term     go to state 23
    factor        go to state 24
    array_access  go to state 30


State 7

   52 factor: PI •

    $default  reduce using rule 52 (factor)


State 8

   53 factor: E •

    $default  reduce using rule 53 (factor)


State 9

   54 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 32
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 10

   30 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    repeat_expression  go to state 33
    expression         go to state 34
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 30


State 11

   11 if_statement: IF • expression_bool THEN marker statement_list FI marker
   12 if_else_statement: IF • expression_bool THEN marker statement_then else_part FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 35
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 36

    expression_bool  go to state 37
    expr_bool_and    go to state 38
    expr_bool_not    go to state 39
    primary_bool     go to state 40
    expr_bool        go to state 41
    expression       go to state 42
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 12

    0 $accept: program • $end

    $end  shift, and go to state 43


State 13

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 14

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 44
    COMMENT  shift, and go to state 45

    $default  reduce using rule 3 (statement_list)


State 15

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 16

    9 statement: if_else_statement •

    $default  reduce using rule 9 (statement)


State 17

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 18

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 19

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 20

   34 expression: expression_list •
   35 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 46

    $default  reduce using rule 34 (expression)


State 21

   36 expression_list: expr_arithmetic •
   38 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   39                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48

    $default  reduce using rule 36 (expression_list)


State 22

   37 expr_arithmetic: expr_unary •

    $default  reduce using rule 37 (expr_arithmetic)


State 23

   40 expr_unary: expr_term •
   44 expr_term: expr_term • MULT factor
   45          | expr_term • DIV factor
   46          | expr_term • MOD factor

    MULT  shift, and go to state 49
    DIV   shift, and go to state 50
    MOD   shift, and go to state 51

    $default  reduce using rule 40 (expr_unary)


State 24

   43 expr_term: factor •

    $default  reduce using rule 43 (expr_term)


State 25

   33 assignment: array_access • ASSIGN expression
   47 factor: array_access •

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 47 (factor)


State 26

   32 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 53
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 27

   55 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 54
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 28

   48 factor: ID •
   55 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 27

    $default  reduce using rule 48 (factor)


State 29

   41 expr_unary: PLUS expr_unary •

    $default  reduce using rule 41 (expr_unary)


State 30

   47 factor: array_access •

    $default  reduce using rule 47 (factor)


State 31

   42 expr_unary: MINUS expr_unary •

    $default  reduce using rule 42 (expr_unary)


State 32

   54 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 55


State 33

   30 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 56


State 34

   31 repeat_expression: expression •

    $default  reduce using rule 31 (repeat_expression)


State 35

   20 expr_bool_not: NOT • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 35
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 36

    expr_bool_not    go to state 57
    primary_bool     go to state 40
    expr_bool        go to state 41
    expression       go to state 42
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 36

   22 primary_bool: LPAREN • expression_bool RPAREN
   54 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 35
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 36

    expression_bool  go to state 58
    expr_bool_and    go to state 38
    expr_bool_not    go to state 39
    primary_bool     go to state 40
    expr_bool        go to state 41
    expression       go to state 59
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 37

   11 if_statement: IF expression_bool • THEN marker statement_list FI marker
   12 if_else_statement: IF expression_bool • THEN marker statement_then else_part FI marker
   16 expression_bool: expression_bool • OR marker expr_bool_and

    OR    shift, and go to state 60
    THEN  shift, and go to state 61


State 38

   15 expression_bool: expr_bool_and •
   18 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 62

    $default  reduce using rule 15 (expression_bool)


State 39

   17 expr_bool_and: expr_bool_not •

    $default  reduce using rule 17 (expr_bool_and)


State 40

   21 expr_bool_not: primary_bool •

    $default  reduce using rule 21 (expr_bool_not)


State 41

   23 primary_bool: expr_bool •

    $default  reduce using rule 23 (primary_bool)


State 42

   24 expr_bool: expression • EQ expression
   25          | expression • NE expression
   26          | expression • GT expression
   27          | expression • GE expression
   28          | expression • LT expression
   29          | expression • LE expression

    GT  shift, and go to state 63
    GE  shift, and go to state 64
    LT  shift, and go to state 65
    LE  shift, and go to state 66
    EQ  shift, and go to state 67
    NE  shift, and go to state 68


State 43

    0 $accept: program $end •

    $default  accept


State 44

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 10 (statement)

    statement_list     go to state 69
    statement          go to state 14
    if_statement       go to state 15
    if_else_statement  go to state 16
    repeat_statement   go to state 17
    assignment         go to state 18
    expression         go to state 19
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 25


State 45

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 46

   35 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 70
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 47

   38 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 71
    expr_term     go to state 23
    factor        go to state 24
    array_access  go to state 30


State 48

   39 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 72
    expr_term     go to state 23
    factor        go to state 24
    array_access  go to state 30


State 49

   44 expr_term: expr_term MULT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 73
    array_access  go to state 30


State 50

   45 expr_term: expr_term DIV • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 74
    array_access  go to state 30


State 51

   46 expr_term: expr_term MOD • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 75
    array_access  go to state 30


State 52

   33 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 76
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 53

   32 assignment: ID ASSIGN expression •

    $default  reduce using rule 32 (assignment)


State 54

   38 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   39                | expr_arithmetic • MINUS expr_unary
   55 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 47
    MINUS     shift, and go to state 48
    RBRACKET  shift, and go to state 77


State 55

   54 factor: LPAREN expression RPAREN •

    $default  reduce using rule 54 (factor)


State 56

   30 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 10 (statement)

    statement_list     go to state 78
    statement          go to state 14
    if_statement       go to state 15
    if_else_statement  go to state 16
    repeat_statement   go to state 17
    assignment         go to state 18
    expression         go to state 19
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 25


State 57

   20 expr_bool_not: NOT expr_bool_not •

    $default  reduce using rule 20 (expr_bool_not)


State 58

   16 expression_bool: expression_bool • OR marker expr_bool_and
   22 primary_bool: LPAREN expression_bool • RPAREN

    OR      shift, and go to state 60
    RPAREN  shift, and go to state 79


State 59

   24 expr_bool: expression • EQ expression
   25          | expression • NE expression
   26          | expression • GT expression
   27          | expression • GE expression
   28          | expression • LT expression
   29          | expression • LE expression
   54 factor: LPAREN expression • RPAREN

    GT      shift, and go to state 63
    GE      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    EQ      shift, and go to state 67
    NE      shift, and go to state 68
    RPAREN  shift, and go to state 55


State 60

   16 expression_bool: expression_bool OR • marker expr_bool_and

    $default  reduce using rule 19 (marker)

    marker  go to state 80


State 61

   11 if_statement: IF expression_bool THEN • marker statement_list FI marker
   12 if_else_statement: IF expression_bool THEN • marker statement_then else_part FI marker

    $default  reduce using rule 19 (marker)

    marker  go to state 81


State 62

   18 expr_bool_and: expr_bool_and AND • marker expr_bool_not

    $default  reduce using rule 19 (marker)

    marker  go to state 82


State 63

   26 expr_bool: expression GT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 83
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 64

   27 expr_bool: expression GE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 84
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 65

   28 expr_bool: expression LT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 85
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 66

   29 expr_bool: expression LE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 86
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 67

   24 expr_bool: expression EQ • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 87
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 68

   25 expr_bool: expression NE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 88
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 69

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 70

   35 expression_list: expression_list COMMA expr_arithmetic •
   38 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   39                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48

    $default  reduce using rule 35 (expression_list)


State 71

   38 expr_arithmetic: expr_arithmetic PLUS expr_unary •

    $default  reduce using rule 38 (expr_arithmetic)


State 72

   39 expr_arithmetic: expr_arithmetic MINUS expr_unary •

    $default  reduce using rule 39 (expr_arithmetic)


State 73

   44 expr_term: expr_term MULT factor •

    $default  reduce using rule 44 (expr_term)


State 74

   45 expr_term: expr_term DIV factor •

    $default  reduce using rule 45 (expr_term)


State 75

   46 expr_term: expr_term MOD factor •

    $default  reduce using rule 46 (expr_term)


State 76

   33 assignment: array_access ASSIGN expression •

    $default  reduce using rule 33 (assignment)


State 77

   55 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 55 (array_access)


State 78

   30 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 89


State 79

   22 primary_bool: LPAREN expression_bool RPAREN •

    $default  reduce using rule 22 (primary_bool)


State 80

   16 expression_bool: expression_bool OR marker • expr_bool_and

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 35
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 36

    expr_bool_and    go to state 90
    expr_bool_not    go to state 39
    primary_bool     go to state 40
    expr_bool        go to state 41
    expression       go to state 42
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 81

   11 if_statement: IF expression_bool THEN marker • statement_list FI marker
   12 if_else_statement: IF expression_bool THEN marker • statement_then else_part FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 10 (statement)

    statement_list     go to state 91
    statement          go to state 14
    if_statement       go to state 15
    if_else_statement  go to state 16
    statement_then     go to state 92
    repeat_statement   go to state 17
    assignment         go to state 18
    expression         go to state 19
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 25


State 82

   18 expr_bool_and: expr_bool_and AND marker • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 28
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 35
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 36

    expr_bool_not    go to state 93
    primary_bool     go to state 40
    expr_bool        go to state 41
    expression       go to state 42
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    factor           go to state 24
    array_access     go to state 30


State 83

   26 expr_bool: expression GT expression •

    $default  reduce using rule 26 (expr_bool)


State 84

   27 expr_bool: expression GE expression •

    $default  reduce using rule 27 (expr_bool)


State 85

   28 expr_bool: expression LT expression •

    $default  reduce using rule 28 (expr_bool)


State 86

   29 expr_bool: expression LE expression •

    $default  reduce using rule 29 (expr_bool)


State 87

   24 expr_bool: expression EQ expression •

    $default  reduce using rule 24 (expr_bool)


State 88

   25 expr_bool: expression NE expression •

    $default  reduce using rule 25 (expr_bool)


State 89

   30 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 30 (repeat_statement)


State 90

   16 expression_bool: expression_bool OR marker expr_bool_and •
   18 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 62

    $default  reduce using rule 16 (expression_bool)


State 91

   11 if_statement: IF expression_bool THEN marker statement_list • FI marker
   14 statement_then: statement_list •

    FI  shift, and go to state 94

    $default  reduce using rule 14 (statement_then)


State 92

   12 if_else_statement: IF expression_bool THEN marker statement_then • else_part FI marker

    ELSE  shift, and go to state 95

    else_part  go to state 96


State 93

   18 expr_bool_and: expr_bool_and AND marker expr_bool_not •

    $default  reduce using rule 18 (expr_bool_and)


State 94

   11 if_statement: IF expression_bool THEN marker statement_list FI • marker

    $default  reduce using rule 19 (marker)

    marker  go to state 97


State 95

   13 else_part: ELSE • marker statement_list

    $default  reduce using rule 19 (marker)

    marker  go to state 98


State 96

   12 if_else_statement: IF expression_bool THEN marker statement_then else_part • FI marker

    FI  shift, and go to state 99


State 97

   11 if_statement: IF expression_bool THEN marker statement_list FI marker •

    $default  reduce using rule 11 (if_statement)


State 98

   13 else_part: ELSE marker • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 10 (statement)

    statement_list     go to state 100
    statement          go to state 14
    if_statement       go to state 15
    if_else_statement  go to state 16
    repeat_statement   go to state 17
    assignment         go to state 18
    expression         go to state 19
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    factor             go to state 24
    array_access       go to state 25


State 99

   12 if_else_statement: IF expression_bool THEN marker statement_then else_part FI • marker

    $default  reduce using rule 19 (marker)

    marker  go to state 101


State 100

   13 else_part: ELSE marker statement_list •

    $default  reduce using rule 13 (else_part)


State 101

   12 if_else_statement: IF expression_bool THEN marker statement_then else_part FI marker •

    $default  reduce using rule 12 (if_else_statement)
