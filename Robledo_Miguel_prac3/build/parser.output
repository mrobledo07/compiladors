Terminals unused in grammar

    BOOLEAN
    DOT
    WHILE
    UNTIL
    FOR
    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | if_statement
    9          | if_else_statement
   10          | switch_statement
   11          | ε

   12 if_statement: IF expression_bool THEN marker statement_list FI marker

   13 if_else_statement: IF expression_bool THEN marker statement_then else_part FI marker

   14 else_part: ELSE marker statement_list

   15 statement_then: statement_list

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH marker

   17 expression_switch: expression

   18 case_list: case_list case_block ENDLINE
   19          | ε

   20 case_block: CASE INTEGER COLON ENDLINE marker statement_list BREAK SEMICOLON

   21 default_clause: DEFAULT COLON ENDLINE marker statement_list BREAK SEMICOLON

   22 expression_bool: expr_bool_and
   23                | expression_bool OR marker expr_bool_and

   24 expr_bool_and: expr_bool_not
   25              | expr_bool_and AND marker expr_bool_not

   26 marker: ε

   27 expr_bool_not: NOT expr_bool_not
   28              | primary_bool

   29 primary_bool: LPAREN expression_bool RPAREN
   30             | expr_bool

   31 expr_bool: expression EQ expression
   32          | expression NE expression
   33          | expression GT expression
   34          | expression GE expression
   35          | expression LT expression
   36          | expression LE expression

   37 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   38 repeat_expression: expression

   39 assignment: ID ASSIGN expression
   40           | array_access ASSIGN expression

   41 expression: expression_list

   42 expression_list: expression_list COMMA expr_arithmetic
   43                | expr_arithmetic

   44 expr_arithmetic: expr_unary
   45                | expr_arithmetic PLUS expr_unary
   46                | expr_arithmetic MINUS expr_unary

   47 expr_unary: expr_term
   48           | PLUS expr_unary
   49           | MINUS expr_unary

   50 expr_term: factor
   51          | expr_term MULT factor
   52          | expr_term DIV factor
   53          | expr_term MOD factor

   54 factor: array_access
   55       | ID
   56       | INTEGER
   57       | STRING
   58       | REAL
   59       | PI
   60       | E
   61       | LPAREN expression RPAREN

   62 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 39 40
    ENDLINE <no_value> (259) 2 16 18 20 21
    INTEGER <integer> (260) 20 56
    ID <ident> (261) 39 55 62
    REAL <real> (262) 58
    STRING <string> (263) 57
    BOOLEAN <boolean> (264)
    PLUS (265) 45 48
    MINUS (266) 46 49
    MULT (267) 51
    DIV (268) 52
    MOD (269) 53
    GT (270) 33
    GE (271) 34
    LT (272) 35
    LE (273) 36
    EQ (274) 31
    NE (275) 32
    NOT (276) 27
    AND (277) 25
    OR (278) 23
    PI (279) 59
    E (280) 60
    LBRACKET (281) 62
    RBRACKET (282) 62
    LPAREN (283) 16 29 61
    RPAREN (284) 16 29 61
    COMMA (285) 42
    DOT (286)
    COLON (287) 20 21
    SEMICOLON (288) 20 21
    COMMENT (289) 6
    REPEAT <ident> (290) 37
    DO (291) 37
    DONE (292) 37
    IF <ident> (293) 12 13
    THEN (294) 12 13
    ELSE (295) 14
    FI (296) 12 13
    SWITCH (297) 16
    CASE (298) 20
    DEFAULT (299) 21
    BREAK (300) 20 21
    FSWITCH (301) 16
    WHILE (302)
    UNTIL (303)
    FOR (304)
    IN (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    statement_list (53)
        on left: 2 3
        on right: 1 2 12 14 15 20 21 37
    statement (54)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3 6
    if_statement <ident> (55)
        on left: 12
        on right: 8
    if_else_statement <ident> (56)
        on left: 13
        on right: 9
    else_part <statement> (57)
        on left: 14
        on right: 13
    statement_then <statement> (58)
        on left: 15
        on right: 13
    switch_statement <ident> (59)
        on left: 16
        on right: 10
    expression_switch <ident> (60)
        on left: 17
        on right: 16
    case_list <statement> (61)
        on left: 18 19
        on right: 16 18
    case_block <statement> (62)
        on left: 20
        on right: 18
    default_clause <statement> (63)
        on left: 21
        on right: 16
    expression_bool <ident> (64)
        on left: 22 23
        on right: 12 13 23 29
    expr_bool_and <ident> (65)
        on left: 24 25
        on right: 22 23 25
    marker <marker> (66)
        on left: 26
        on right: 12 13 14 16 20 21 23 25
    expr_bool_not <ident> (67)
        on left: 27 28
        on right: 24 25 27
    primary_bool <ident> (68)
        on left: 29 30
        on right: 28
    expr_bool <ident> (69)
        on left: 31 32 33 34 35 36
        on right: 30
    repeat_statement (70)
        on left: 37
        on right: 7
    repeat_expression <ident> (71)
        on left: 38
        on right: 37
    assignment (72)
        on left: 39 40
        on right: 4
    expression <ident> (73)
        on left: 41
        on right: 5 17 31 32 33 34 35 36 38 39 40 61
    expression_list <ident> (74)
        on left: 42 43
        on right: 41 42
    expr_arithmetic <ident> (75)
        on left: 44 45 46
        on right: 42 43 45 46 62
    expr_unary <ident> (76)
        on left: 47 48 49
        on right: 44 45 46 48 49
    expr_term <ident> (77)
        on left: 50 51 52 53
        on right: 47 51 52 53
    factor <ident> (78)
        on left: 54 55 56 57 58 59 60 61
        on right: 50 51 52 53
    array_access <ident> (79)
        on left: 62
        on right: 40 54


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    program            go to state 13
    statement_list     go to state 14
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 1

   56 factor: INTEGER •

    $default  reduce using rule 56 (factor)


State 2

   39 assignment: ID • ASSIGN expression
   55 factor: ID •
   62 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 28
    LBRACKET  shift, and go to state 29

    $default  reduce using rule 55 (factor)


State 3

   58 factor: REAL •

    $default  reduce using rule 58 (factor)


State 4

   57 factor: STRING •

    $default  reduce using rule 57 (factor)


State 5

   48 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 31
    expr_term     go to state 25
    factor        go to state 26
    array_access  go to state 32


State 6

   49 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 33
    expr_term     go to state 25
    factor        go to state 26
    array_access  go to state 32


State 7

   59 factor: PI •

    $default  reduce using rule 59 (factor)


State 8

   60 factor: E •

    $default  reduce using rule 60 (factor)


State 9

   61 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 34
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 10

   37 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    repeat_expression  go to state 35
    expression         go to state 36
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 32


State 11

   12 if_statement: IF • expression_bool THEN marker statement_list FI marker
   13 if_else_statement: IF • expression_bool THEN marker statement_then else_part FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 37
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 38

    expression_bool  go to state 39
    expr_bool_and    go to state 40
    expr_bool_not    go to state 41
    primary_bool     go to state 42
    expr_bool        go to state 43
    expression       go to state 44
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 12

   16 switch_statement: SWITCH • LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH marker

    LPAREN  shift, and go to state 45


State 13

    0 $accept: program • $end

    $end  shift, and go to state 46


State 14

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 15

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 47
    COMMENT  shift, and go to state 48

    $default  reduce using rule 3 (statement_list)


State 16

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 17

    9 statement: if_else_statement •

    $default  reduce using rule 9 (statement)


State 18

   10 statement: switch_statement •

    $default  reduce using rule 10 (statement)


State 19

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 20

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 21

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 22

   41 expression: expression_list •
   42 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 49

    $default  reduce using rule 41 (expression)


State 23

   43 expression_list: expr_arithmetic •
   45 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   46                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 43 (expression_list)


State 24

   44 expr_arithmetic: expr_unary •

    $default  reduce using rule 44 (expr_arithmetic)


State 25

   47 expr_unary: expr_term •
   51 expr_term: expr_term • MULT factor
   52          | expr_term • DIV factor
   53          | expr_term • MOD factor

    MULT  shift, and go to state 52
    DIV   shift, and go to state 53
    MOD   shift, and go to state 54

    $default  reduce using rule 47 (expr_unary)


State 26

   50 expr_term: factor •

    $default  reduce using rule 50 (expr_term)


State 27

   40 assignment: array_access • ASSIGN expression
   54 factor: array_access •

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 54 (factor)


State 28

   39 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 56
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 29

   62 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 57
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 30

   55 factor: ID •
   62 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 29

    $default  reduce using rule 55 (factor)


State 31

   48 expr_unary: PLUS expr_unary •

    $default  reduce using rule 48 (expr_unary)


State 32

   54 factor: array_access •

    $default  reduce using rule 54 (factor)


State 33

   49 expr_unary: MINUS expr_unary •

    $default  reduce using rule 49 (expr_unary)


State 34

   61 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 58


State 35

   37 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 59


State 36

   38 repeat_expression: expression •

    $default  reduce using rule 38 (repeat_expression)


State 37

   27 expr_bool_not: NOT • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 37
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 38

    expr_bool_not    go to state 60
    primary_bool     go to state 42
    expr_bool        go to state 43
    expression       go to state 44
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 38

   29 primary_bool: LPAREN • expression_bool RPAREN
   61 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 37
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 38

    expression_bool  go to state 61
    expr_bool_and    go to state 40
    expr_bool_not    go to state 41
    primary_bool     go to state 42
    expr_bool        go to state 43
    expression       go to state 62
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 39

   12 if_statement: IF expression_bool • THEN marker statement_list FI marker
   13 if_else_statement: IF expression_bool • THEN marker statement_then else_part FI marker
   23 expression_bool: expression_bool • OR marker expr_bool_and

    OR    shift, and go to state 63
    THEN  shift, and go to state 64


State 40

   22 expression_bool: expr_bool_and •
   25 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 65

    $default  reduce using rule 22 (expression_bool)


State 41

   24 expr_bool_and: expr_bool_not •

    $default  reduce using rule 24 (expr_bool_and)


State 42

   28 expr_bool_not: primary_bool •

    $default  reduce using rule 28 (expr_bool_not)


State 43

   30 primary_bool: expr_bool •

    $default  reduce using rule 30 (primary_bool)


State 44

   31 expr_bool: expression • EQ expression
   32          | expression • NE expression
   33          | expression • GT expression
   34          | expression • GE expression
   35          | expression • LT expression
   36          | expression • LE expression

    GT  shift, and go to state 66
    GE  shift, and go to state 67
    LT  shift, and go to state 68
    LE  shift, and go to state 69
    EQ  shift, and go to state 70
    NE  shift, and go to state 71


State 45

   16 switch_statement: SWITCH LPAREN • expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression_switch  go to state 72
    expression         go to state 73
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 32


State 46

    0 $accept: program $end •

    $default  accept


State 47

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 74
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 48

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 49

   42 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 75
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 50

   45 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 76
    expr_term     go to state 25
    factor        go to state 26
    array_access  go to state 32


State 51

   46 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 77
    expr_term     go to state 25
    factor        go to state 26
    array_access  go to state 32


State 52

   51 expr_term: expr_term MULT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 78
    array_access  go to state 32


State 53

   52 expr_term: expr_term DIV • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 79
    array_access  go to state 32


State 54

   53 expr_term: expr_term MOD • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 80
    array_access  go to state 32


State 55

   40 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 81
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 56

   39 assignment: ID ASSIGN expression •

    $default  reduce using rule 39 (assignment)


State 57

   45 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   46                | expr_arithmetic • MINUS expr_unary
   62 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 50
    MINUS     shift, and go to state 51
    RBRACKET  shift, and go to state 82


State 58

   61 factor: LPAREN expression RPAREN •

    $default  reduce using rule 61 (factor)


State 59

   37 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 83
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 60

   27 expr_bool_not: NOT expr_bool_not •

    $default  reduce using rule 27 (expr_bool_not)


State 61

   23 expression_bool: expression_bool • OR marker expr_bool_and
   29 primary_bool: LPAREN expression_bool • RPAREN

    OR      shift, and go to state 63
    RPAREN  shift, and go to state 84


State 62

   31 expr_bool: expression • EQ expression
   32          | expression • NE expression
   33          | expression • GT expression
   34          | expression • GE expression
   35          | expression • LT expression
   36          | expression • LE expression
   61 factor: LPAREN expression • RPAREN

    GT      shift, and go to state 66
    GE      shift, and go to state 67
    LT      shift, and go to state 68
    LE      shift, and go to state 69
    EQ      shift, and go to state 70
    NE      shift, and go to state 71
    RPAREN  shift, and go to state 58


State 63

   23 expression_bool: expression_bool OR • marker expr_bool_and

    $default  reduce using rule 26 (marker)

    marker  go to state 85


State 64

   12 if_statement: IF expression_bool THEN • marker statement_list FI marker
   13 if_else_statement: IF expression_bool THEN • marker statement_then else_part FI marker

    $default  reduce using rule 26 (marker)

    marker  go to state 86


State 65

   25 expr_bool_and: expr_bool_and AND • marker expr_bool_not

    $default  reduce using rule 26 (marker)

    marker  go to state 87


State 66

   33 expr_bool: expression GT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 88
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 67

   34 expr_bool: expression GE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 89
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 68

   35 expr_bool: expression LT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 90
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 69

   36 expr_bool: expression LE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 91
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 70

   31 expr_bool: expression EQ • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 92
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 71

   32 expr_bool: expression NE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 93
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 72

   16 switch_statement: SWITCH LPAREN expression_switch • RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH marker

    RPAREN  shift, and go to state 94


State 73

   17 expression_switch: expression •

    $default  reduce using rule 17 (expression_switch)


State 74

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 75

   42 expression_list: expression_list COMMA expr_arithmetic •
   45 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   46                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 42 (expression_list)


State 76

   45 expr_arithmetic: expr_arithmetic PLUS expr_unary •

    $default  reduce using rule 45 (expr_arithmetic)


State 77

   46 expr_arithmetic: expr_arithmetic MINUS expr_unary •

    $default  reduce using rule 46 (expr_arithmetic)


State 78

   51 expr_term: expr_term MULT factor •

    $default  reduce using rule 51 (expr_term)


State 79

   52 expr_term: expr_term DIV factor •

    $default  reduce using rule 52 (expr_term)


State 80

   53 expr_term: expr_term MOD factor •

    $default  reduce using rule 53 (expr_term)


State 81

   40 assignment: array_access ASSIGN expression •

    $default  reduce using rule 40 (assignment)


State 82

   62 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 62 (array_access)


State 83

   37 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 95


State 84

   29 primary_bool: LPAREN expression_bool RPAREN •

    $default  reduce using rule 29 (primary_bool)


State 85

   23 expression_bool: expression_bool OR marker • expr_bool_and

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 37
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 38

    expr_bool_and    go to state 96
    expr_bool_not    go to state 41
    primary_bool     go to state 42
    expr_bool        go to state 43
    expression       go to state 44
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 86

   12 if_statement: IF expression_bool THEN marker • statement_list FI marker
   13 if_else_statement: IF expression_bool THEN marker • statement_then else_part FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 97
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    statement_then     go to state 98
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 87

   25 expr_bool_and: expr_bool_and AND marker • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 30
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 37
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 38

    expr_bool_not    go to state 99
    primary_bool     go to state 42
    expr_bool        go to state 43
    expression       go to state 44
    expression_list  go to state 22
    expr_arithmetic  go to state 23
    expr_unary       go to state 24
    expr_term        go to state 25
    factor           go to state 26
    array_access     go to state 32


State 88

   33 expr_bool: expression GT expression •

    $default  reduce using rule 33 (expr_bool)


State 89

   34 expr_bool: expression GE expression •

    $default  reduce using rule 34 (expr_bool)


State 90

   35 expr_bool: expression LT expression •

    $default  reduce using rule 35 (expr_bool)


State 91

   36 expr_bool: expression LE expression •

    $default  reduce using rule 36 (expr_bool)


State 92

   31 expr_bool: expression EQ expression •

    $default  reduce using rule 31 (expr_bool)


State 93

   32 expr_bool: expression NE expression •

    $default  reduce using rule 32 (expr_bool)


State 94

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN • ENDLINE marker case_list default_clause ENDLINE FSWITCH marker

    ENDLINE  shift, and go to state 100


State 95

   37 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 37 (repeat_statement)


State 96

   23 expression_bool: expression_bool OR marker expr_bool_and •
   25 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 65

    $default  reduce using rule 23 (expression_bool)


State 97

   12 if_statement: IF expression_bool THEN marker statement_list • FI marker
   15 statement_then: statement_list •

    FI  shift, and go to state 101

    $default  reduce using rule 15 (statement_then)


State 98

   13 if_else_statement: IF expression_bool THEN marker statement_then • else_part FI marker

    ELSE  shift, and go to state 102

    else_part  go to state 103


State 99

   25 expr_bool_and: expr_bool_and AND marker expr_bool_not •

    $default  reduce using rule 25 (expr_bool_and)


State 100

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE • marker case_list default_clause ENDLINE FSWITCH marker

    $default  reduce using rule 26 (marker)

    marker  go to state 104


State 101

   12 if_statement: IF expression_bool THEN marker statement_list FI • marker

    $default  reduce using rule 26 (marker)

    marker  go to state 105


State 102

   14 else_part: ELSE • marker statement_list

    $default  reduce using rule 26 (marker)

    marker  go to state 106


State 103

   13 if_else_statement: IF expression_bool THEN marker statement_then else_part • FI marker

    FI  shift, and go to state 107


State 104

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker • case_list default_clause ENDLINE FSWITCH marker

    $default  reduce using rule 19 (case_list)

    case_list  go to state 108


State 105

   12 if_statement: IF expression_bool THEN marker statement_list FI marker •

    $default  reduce using rule 12 (if_statement)


State 106

   14 else_part: ELSE marker • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 109
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 107

   13 if_else_statement: IF expression_bool THEN marker statement_then else_part FI • marker

    $default  reduce using rule 26 (marker)

    marker  go to state 110


State 108

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list • default_clause ENDLINE FSWITCH marker
   18 case_list: case_list • case_block ENDLINE

    CASE     shift, and go to state 111
    DEFAULT  shift, and go to state 112

    case_block      go to state 113
    default_clause  go to state 114


State 109

   14 else_part: ELSE marker statement_list •

    $default  reduce using rule 14 (else_part)


State 110

   13 if_else_statement: IF expression_bool THEN marker statement_then else_part FI marker •

    $default  reduce using rule 13 (if_else_statement)


State 111

   20 case_block: CASE • INTEGER COLON ENDLINE marker statement_list BREAK SEMICOLON

    INTEGER  shift, and go to state 115


State 112

   21 default_clause: DEFAULT • COLON ENDLINE marker statement_list BREAK SEMICOLON

    COLON  shift, and go to state 116


State 113

   18 case_list: case_list case_block • ENDLINE

    ENDLINE  shift, and go to state 117


State 114

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause • ENDLINE FSWITCH marker

    ENDLINE  shift, and go to state 118


State 115

   20 case_block: CASE INTEGER • COLON ENDLINE marker statement_list BREAK SEMICOLON

    COLON  shift, and go to state 119


State 116

   21 default_clause: DEFAULT COLON • ENDLINE marker statement_list BREAK SEMICOLON

    ENDLINE  shift, and go to state 120


State 117

   18 case_list: case_list case_block ENDLINE •

    $default  reduce using rule 18 (case_list)


State 118

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE • FSWITCH marker

    FSWITCH  shift, and go to state 121


State 119

   20 case_block: CASE INTEGER COLON • ENDLINE marker statement_list BREAK SEMICOLON

    ENDLINE  shift, and go to state 122


State 120

   21 default_clause: DEFAULT COLON ENDLINE • marker statement_list BREAK SEMICOLON

    $default  reduce using rule 26 (marker)

    marker  go to state 123


State 121

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH • marker

    $default  reduce using rule 26 (marker)

    marker  go to state 124


State 122

   20 case_block: CASE INTEGER COLON ENDLINE • marker statement_list BREAK SEMICOLON

    $default  reduce using rule 26 (marker)

    marker  go to state 125


State 123

   21 default_clause: DEFAULT COLON ENDLINE marker • statement_list BREAK SEMICOLON

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 126
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 124

   16 switch_statement: SWITCH LPAREN expression_switch RPAREN ENDLINE marker case_list default_clause ENDLINE FSWITCH marker •

    $default  reduce using rule 16 (switch_statement)


State 125

   20 case_block: CASE INTEGER COLON ENDLINE marker • statement_list BREAK SEMICOLON

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11
    SWITCH   shift, and go to state 12

    $default  reduce using rule 11 (statement)

    statement_list     go to state 127
    statement          go to state 15
    if_statement       go to state 16
    if_else_statement  go to state 17
    switch_statement   go to state 18
    repeat_statement   go to state 19
    assignment         go to state 20
    expression         go to state 21
    expression_list    go to state 22
    expr_arithmetic    go to state 23
    expr_unary         go to state 24
    expr_term          go to state 25
    factor             go to state 26
    array_access       go to state 27


State 126

   21 default_clause: DEFAULT COLON ENDLINE marker statement_list • BREAK SEMICOLON

    BREAK  shift, and go to state 128


State 127

   20 case_block: CASE INTEGER COLON ENDLINE marker statement_list • BREAK SEMICOLON

    BREAK  shift, and go to state 129


State 128

   21 default_clause: DEFAULT COLON ENDLINE marker statement_list BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 129

   20 case_block: CASE INTEGER COLON ENDLINE marker statement_list BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 131


State 130

   21 default_clause: DEFAULT COLON ENDLINE marker statement_list BREAK SEMICOLON •

    $default  reduce using rule 21 (default_clause)


State 131

   20 case_block: CASE INTEGER COLON ENDLINE marker statement_list BREAK SEMICOLON •

    $default  reduce using rule 20 (case_block)
