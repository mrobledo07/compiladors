Terminals unused in grammar

    BOOLEAN
    DOT
    ELSE
    SWITCH
    CASE
    DEFAULT
    BREAK
    FSWITCH
    WHILE
    UNTIL
    FOR
    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | if_statement
    9          | ε

   10 if_statement: IF expression THEN statement_list FI

   11 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   12 repeat_expression: expression

   13 assignment: ID ASSIGN expression
   14           | array_access ASSIGN expression

   15 expression: expression_list

   16 expression_list: expression_list COMMA expr_arithmetic
   17                | expr_arithmetic

   18 expr_arithmetic: expr_unary
   19                | expr_arithmetic PLUS expr_unary
   20                | expr_arithmetic MINUS expr_unary
   21                | expr_arithmetic OR expr_unary

   22 expr_unary: expr_term
   23           | PLUS expr_unary
   24           | MINUS expr_unary
   25           | expr_unary AND expr_term

   26 expr_term: expr_bool
   27          | expr_term MULT expr_bool
   28          | expr_term DIV expr_bool
   29          | expr_term MOD expr_bool
   30          | NOT expr_bool

   31 expr_bool: factor
   32          | expr_bool GT factor
   33          | expr_bool LT factor
   34          | expr_bool GE factor
   35          | expr_bool LE factor
   36          | expr_bool EQ factor
   37          | expr_bool NE factor

   38 factor: array_access
   39       | ID
   40       | INTEGER
   41       | STRING
   42       | REAL
   43       | PI
   44       | E
   45       | LPAREN expression RPAREN

   46 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 13 14
    ENDLINE <no_value> (259) 2
    INTEGER <integer> (260) 40
    ID <ident> (261) 13 39 46
    REAL <real> (262) 42
    STRING <string> (263) 41
    BOOLEAN <boolean> (264)
    PLUS (265) 19 23
    MINUS (266) 20 24
    MULT (267) 27
    DIV (268) 28
    MOD (269) 29
    GT (270) 32
    GE (271) 34
    LT (272) 33
    LE (273) 35
    EQ (274) 36
    NE (275) 37
    NOT (276) 30
    AND (277) 25
    OR (278) 21
    PI (279) 43
    E (280) 44
    LBRACKET (281) 46
    RBRACKET (282) 46
    LPAREN (283) 45
    RPAREN (284) 45
    COMMA (285) 16
    DOT (286)
    COMMENT (287) 6
    REPEAT <ident> (288) 11
    DO (289) 11
    DONE (290) 11
    IF <ident> (291) 10
    THEN (292) 10
    ELSE (293)
    FI (294) 10
    SWITCH (295)
    CASE (296)
    DEFAULT (297)
    BREAK (298)
    FSWITCH (299)
    WHILE (300)
    UNTIL (301)
    FOR (302)
    IN (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statement_list (51)
        on left: 2 3
        on right: 1 2 10 11
    statement (52)
        on left: 4 5 6 7 8 9
        on right: 2 3 6
    if_statement <ident> (53)
        on left: 10
        on right: 8
    repeat_statement (54)
        on left: 11
        on right: 7
    repeat_expression <ident> (55)
        on left: 12
        on right: 11
    assignment (56)
        on left: 13 14
        on right: 4
    expression <ident> (57)
        on left: 15
        on right: 5 10 12 13 14 45
    expression_list <ident> (58)
        on left: 16 17
        on right: 15 16
    expr_arithmetic <ident> (59)
        on left: 18 19 20 21
        on right: 16 17 19 20 21 46
    expr_unary <ident> (60)
        on left: 22 23 24 25
        on right: 18 19 20 21 23 24 25
    expr_term <ident> (61)
        on left: 26 27 28 29 30
        on right: 22 25 27 28 29
    expr_bool <ident> (62)
        on left: 31 32 33 34 35 36 37
        on right: 26 27 28 29 30 32 33 34 35 36 37
    factor <ident> (63)
        on left: 38 39 40 41 42 43 44 45
        on right: 31 32 33 34 35 36 37
    array_access <ident> (64)
        on left: 46
        on right: 14 38


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11
    IF       shift, and go to state 12

    $default  reduce using rule 9 (statement)

    program           go to state 13
    statement_list    go to state 14
    statement         go to state 15
    if_statement      go to state 16
    repeat_statement  go to state 17
    assignment        go to state 18
    expression        go to state 19
    expression_list   go to state 20
    expr_arithmetic   go to state 21
    expr_unary        go to state 22
    expr_term         go to state 23
    expr_bool         go to state 24
    factor            go to state 25
    array_access      go to state 26


State 1

   40 factor: INTEGER •

    $default  reduce using rule 40 (factor)


State 2

   13 assignment: ID • ASSIGN expression
   39 factor: ID •
   46 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 27
    LBRACKET  shift, and go to state 28

    $default  reduce using rule 39 (factor)


State 3

   42 factor: REAL •

    $default  reduce using rule 42 (factor)


State 4

   41 factor: STRING •

    $default  reduce using rule 41 (factor)


State 5

   23 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 30
    expr_term     go to state 23
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 6

   24 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 32
    expr_term     go to state 23
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 7

   30 expr_term: NOT • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 33
    factor        go to state 25
    array_access  go to state 31


State 8

   43 factor: PI •

    $default  reduce using rule 43 (factor)


State 9

   44 factor: E •

    $default  reduce using rule 44 (factor)


State 10

   45 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 34
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 11

   11 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    repeat_expression  go to state 35
    expression         go to state 36
    expression_list    go to state 20
    expr_arithmetic    go to state 21
    expr_unary         go to state 22
    expr_term          go to state 23
    expr_bool          go to state 24
    factor             go to state 25
    array_access       go to state 31


State 12

   10 if_statement: IF • expression THEN statement_list FI

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 37
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 13

    0 $accept: program • $end

    $end  shift, and go to state 38


State 14

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 15

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 39
    COMMENT  shift, and go to state 40

    $default  reduce using rule 3 (statement_list)


State 16

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 17

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 18

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 19

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 20

   15 expression: expression_list •
   16 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 41

    $default  reduce using rule 15 (expression)


State 21

   17 expression_list: expr_arithmetic •
   19 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   20                | expr_arithmetic • MINUS expr_unary
   21                | expr_arithmetic • OR expr_unary

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    OR     shift, and go to state 44

    $default  reduce using rule 17 (expression_list)


State 22

   18 expr_arithmetic: expr_unary •
   25 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 45

    $default  reduce using rule 18 (expr_arithmetic)


State 23

   22 expr_unary: expr_term •
   27 expr_term: expr_term • MULT expr_bool
   28          | expr_term • DIV expr_bool
   29          | expr_term • MOD expr_bool

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47
    MOD   shift, and go to state 48

    $default  reduce using rule 22 (expr_unary)


State 24

   26 expr_term: expr_bool •
   32 expr_bool: expr_bool • GT factor
   33          | expr_bool • LT factor
   34          | expr_bool • GE factor
   35          | expr_bool • LE factor
   36          | expr_bool • EQ factor
   37          | expr_bool • NE factor

    GT  shift, and go to state 49
    GE  shift, and go to state 50
    LT  shift, and go to state 51
    LE  shift, and go to state 52
    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 26 (expr_term)


State 25

   31 expr_bool: factor •

    $default  reduce using rule 31 (expr_bool)


State 26

   14 assignment: array_access • ASSIGN expression
   38 factor: array_access •

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 38 (factor)


State 27

   13 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 56
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 28

   46 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_arithmetic  go to state 57
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 29

   39 factor: ID •
   46 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 28

    $default  reduce using rule 39 (factor)


State 30

   23 expr_unary: PLUS expr_unary •
   25           | expr_unary • AND expr_term

    $default  reduce using rule 23 (expr_unary)


State 31

   38 factor: array_access •

    $default  reduce using rule 38 (factor)


State 32

   24 expr_unary: MINUS expr_unary •
   25           | expr_unary • AND expr_term

    $default  reduce using rule 24 (expr_unary)


State 33

   30 expr_term: NOT expr_bool •
   32 expr_bool: expr_bool • GT factor
   33          | expr_bool • LT factor
   34          | expr_bool • GE factor
   35          | expr_bool • LE factor
   36          | expr_bool • EQ factor
   37          | expr_bool • NE factor

    GT  shift, and go to state 49
    GE  shift, and go to state 50
    LT  shift, and go to state 51
    LE  shift, and go to state 52
    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 30 (expr_term)


State 34

   45 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 58


State 35

   11 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 59


State 36

   12 repeat_expression: expression •

    $default  reduce using rule 12 (repeat_expression)


State 37

   10 if_statement: IF expression • THEN statement_list FI

    THEN  shift, and go to state 60


State 38

    0 $accept: program $end •

    $default  accept


State 39

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11
    IF       shift, and go to state 12

    $default  reduce using rule 9 (statement)

    statement_list    go to state 61
    statement         go to state 15
    if_statement      go to state 16
    repeat_statement  go to state 17
    assignment        go to state 18
    expression        go to state 19
    expression_list   go to state 20
    expr_arithmetic   go to state 21
    expr_unary        go to state 22
    expr_term         go to state 23
    expr_bool         go to state 24
    factor            go to state 25
    array_access      go to state 26


State 40

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 41

   16 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_arithmetic  go to state 62
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 42

   19 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 63
    expr_term     go to state 23
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 43

   20 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 64
    expr_term     go to state 23
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 44

   21 expr_arithmetic: expr_arithmetic OR • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 65
    expr_term     go to state 23
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 45

   25 expr_unary: expr_unary AND • expr_term

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_term     go to state 66
    expr_bool     go to state 24
    factor        go to state 25
    array_access  go to state 31


State 46

   27 expr_term: expr_term MULT • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 67
    factor        go to state 25
    array_access  go to state 31


State 47

   28 expr_term: expr_term DIV • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 68
    factor        go to state 25
    array_access  go to state 31


State 48

   29 expr_term: expr_term MOD • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 69
    factor        go to state 25
    array_access  go to state 31


State 49

   32 expr_bool: expr_bool GT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 70
    array_access  go to state 31


State 50

   34 expr_bool: expr_bool GE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 71
    array_access  go to state 31


State 51

   33 expr_bool: expr_bool LT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 72
    array_access  go to state 31


State 52

   35 expr_bool: expr_bool LE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 73
    array_access  go to state 31


State 53

   36 expr_bool: expr_bool EQ • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 74
    array_access  go to state 31


State 54

   37 expr_bool: expr_bool NE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 75
    array_access  go to state 31


State 55

   14 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 29
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 76
    expression_list  go to state 20
    expr_arithmetic  go to state 21
    expr_unary       go to state 22
    expr_term        go to state 23
    expr_bool        go to state 24
    factor           go to state 25
    array_access     go to state 31


State 56

   13 assignment: ID ASSIGN expression •

    $default  reduce using rule 13 (assignment)


State 57

   19 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   20                | expr_arithmetic • MINUS expr_unary
   21                | expr_arithmetic • OR expr_unary
   46 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    OR        shift, and go to state 44
    RBRACKET  shift, and go to state 77


State 58

   45 factor: LPAREN expression RPAREN •

    $default  reduce using rule 45 (factor)


State 59

   11 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11
    IF       shift, and go to state 12

    $default  reduce using rule 9 (statement)

    statement_list    go to state 78
    statement         go to state 15
    if_statement      go to state 16
    repeat_statement  go to state 17
    assignment        go to state 18
    expression        go to state 19
    expression_list   go to state 20
    expr_arithmetic   go to state 21
    expr_unary        go to state 22
    expr_term         go to state 23
    expr_bool         go to state 24
    factor            go to state 25
    array_access      go to state 26


State 60

   10 if_statement: IF expression THEN • statement_list FI

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11
    IF       shift, and go to state 12

    $default  reduce using rule 9 (statement)

    statement_list    go to state 79
    statement         go to state 15
    if_statement      go to state 16
    repeat_statement  go to state 17
    assignment        go to state 18
    expression        go to state 19
    expression_list   go to state 20
    expr_arithmetic   go to state 21
    expr_unary        go to state 22
    expr_term         go to state 23
    expr_bool         go to state 24
    factor            go to state 25
    array_access      go to state 26


State 61

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 62

   16 expression_list: expression_list COMMA expr_arithmetic •
   19 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   20                | expr_arithmetic • MINUS expr_unary
   21                | expr_arithmetic • OR expr_unary

    PLUS   shift, and go to state 42
    MINUS  shift, and go to state 43
    OR     shift, and go to state 44

    $default  reduce using rule 16 (expression_list)


State 63

   19 expr_arithmetic: expr_arithmetic PLUS expr_unary •
   25 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 45

    $default  reduce using rule 19 (expr_arithmetic)


State 64

   20 expr_arithmetic: expr_arithmetic MINUS expr_unary •
   25 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 45

    $default  reduce using rule 20 (expr_arithmetic)


State 65

   21 expr_arithmetic: expr_arithmetic OR expr_unary •
   25 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 45

    $default  reduce using rule 21 (expr_arithmetic)


State 66

   25 expr_unary: expr_unary AND expr_term •
   27 expr_term: expr_term • MULT expr_bool
   28          | expr_term • DIV expr_bool
   29          | expr_term • MOD expr_bool

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47
    MOD   shift, and go to state 48

    $default  reduce using rule 25 (expr_unary)


State 67

   27 expr_term: expr_term MULT expr_bool •
   32 expr_bool: expr_bool • GT factor
   33          | expr_bool • LT factor
   34          | expr_bool • GE factor
   35          | expr_bool • LE factor
   36          | expr_bool • EQ factor
   37          | expr_bool • NE factor

    GT  shift, and go to state 49
    GE  shift, and go to state 50
    LT  shift, and go to state 51
    LE  shift, and go to state 52
    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 27 (expr_term)


State 68

   28 expr_term: expr_term DIV expr_bool •
   32 expr_bool: expr_bool • GT factor
   33          | expr_bool • LT factor
   34          | expr_bool • GE factor
   35          | expr_bool • LE factor
   36          | expr_bool • EQ factor
   37          | expr_bool • NE factor

    GT  shift, and go to state 49
    GE  shift, and go to state 50
    LT  shift, and go to state 51
    LE  shift, and go to state 52
    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 28 (expr_term)


State 69

   29 expr_term: expr_term MOD expr_bool •
   32 expr_bool: expr_bool • GT factor
   33          | expr_bool • LT factor
   34          | expr_bool • GE factor
   35          | expr_bool • LE factor
   36          | expr_bool • EQ factor
   37          | expr_bool • NE factor

    GT  shift, and go to state 49
    GE  shift, and go to state 50
    LT  shift, and go to state 51
    LE  shift, and go to state 52
    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 29 (expr_term)


State 70

   32 expr_bool: expr_bool GT factor •

    $default  reduce using rule 32 (expr_bool)


State 71

   34 expr_bool: expr_bool GE factor •

    $default  reduce using rule 34 (expr_bool)


State 72

   33 expr_bool: expr_bool LT factor •

    $default  reduce using rule 33 (expr_bool)


State 73

   35 expr_bool: expr_bool LE factor •

    $default  reduce using rule 35 (expr_bool)


State 74

   36 expr_bool: expr_bool EQ factor •

    $default  reduce using rule 36 (expr_bool)


State 75

   37 expr_bool: expr_bool NE factor •

    $default  reduce using rule 37 (expr_bool)


State 76

   14 assignment: array_access ASSIGN expression •

    $default  reduce using rule 14 (assignment)


State 77

   46 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 46 (array_access)


State 78

   11 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 80


State 79

   10 if_statement: IF expression THEN statement_list • FI

    FI  shift, and go to state 81


State 80

   11 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 11 (repeat_statement)


State 81

   10 if_statement: IF expression THEN statement_list FI •

    $default  reduce using rule 10 (if_statement)
