Terminals unused in grammar

    BOOLEAN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | ε

    9 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   10 repeat_expression: expression

   11 assignment: ID ASSIGN expression
   12           | array_access ASSIGN expression

   13 expression: expression_list

   14 expression_list: expression_list COMMA expr_arithmetic
   15                | expr_arithmetic

   16 expr_arithmetic: expr_unary
   17                | expr_arithmetic PLUS expr_unary
   18                | expr_arithmetic MINUS expr_unary
   19                | expr_arithmetic OR expr_unary

   20 expr_unary: expr_term
   21           | PLUS expr_unary
   22           | MINUS expr_unary
   23           | expr_unary AND expr_term

   24 expr_term: expr_bool
   25          | expr_term MULT expr_bool
   26          | expr_term DIV expr_bool
   27          | expr_term MOD expr_bool
   28          | NOT expr_bool

   29 expr_bool: factor
   30          | expr_bool GT factor
   31          | expr_bool LT factor
   32          | expr_bool GE factor
   33          | expr_bool LE factor
   34          | expr_bool EQ factor
   35          | expr_bool NE factor

   36 factor: array_access
   37       | ID
   38       | INTEGER
   39       | STRING
   40       | REAL
   41       | PI
   42       | E
   43       | LPAREN expression RPAREN

   44 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 11 12
    ENDLINE <no_value> (259) 2
    INTEGER <integer> (260) 38
    ID <ident> (261) 11 37 44
    REAL <real> (262) 40
    STRING <string> (263) 39
    BOOLEAN <boolean> (264)
    PLUS (265) 17 21
    MINUS (266) 18 22
    MULT (267) 25
    DIV (268) 26
    MOD (269) 27
    GT (270) 30
    GE (271) 32
    LT (272) 31
    LE (273) 33
    EQ (274) 34
    NE (275) 35
    NOT (276) 28
    AND (277) 23
    OR (278) 19
    PI (279) 41
    E (280) 42
    LBRACKET (281) 44
    RBRACKET (282) 44
    LPAREN (283) 43
    RPAREN (284) 43
    COMMA (285) 14
    COMMENT (286) 6
    REPEAT <ident> (287) 9
    DO (288) 9
    DONE (289) 9


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    statement_list (37)
        on left: 2 3
        on right: 1 2 9
    statement (38)
        on left: 4 5 6 7 8
        on right: 2 3 6
    repeat_statement (39)
        on left: 9
        on right: 7
    repeat_expression <ident> (40)
        on left: 10
        on right: 9
    assignment (41)
        on left: 11 12
        on right: 4
    expression <ident> (42)
        on left: 13
        on right: 5 10 11 12 43
    expression_list <ident> (43)
        on left: 14 15
        on right: 13 14
    expr_arithmetic <ident> (44)
        on left: 16 17 18 19
        on right: 14 15 17 18 19 44
    expr_unary <ident> (45)
        on left: 20 21 22 23
        on right: 16 17 18 19 21 22 23
    expr_term <ident> (46)
        on left: 24 25 26 27 28
        on right: 20 23 25 26 27
    expr_bool <ident> (47)
        on left: 29 30 31 32 33 34 35
        on right: 24 25 26 27 28 30 31 32 33 34 35
    factor <ident> (48)
        on left: 36 37 38 39 40 41 42 43
        on right: 29 30 31 32 33 34 35
    array_access <ident> (49)
        on left: 44
        on right: 12 36


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11

    $default  reduce using rule 8 (statement)

    program           go to state 12
    statement_list    go to state 13
    statement         go to state 14
    repeat_statement  go to state 15
    assignment        go to state 16
    expression        go to state 17
    expression_list   go to state 18
    expr_arithmetic   go to state 19
    expr_unary        go to state 20
    expr_term         go to state 21
    expr_bool         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 1

   38 factor: INTEGER •

    $default  reduce using rule 38 (factor)


State 2

   11 assignment: ID • ASSIGN expression
   37 factor: ID •
   44 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 25
    LBRACKET  shift, and go to state 26

    $default  reduce using rule 37 (factor)


State 3

   40 factor: REAL •

    $default  reduce using rule 40 (factor)


State 4

   39 factor: STRING •

    $default  reduce using rule 39 (factor)


State 5

   21 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 28
    expr_term     go to state 21
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 6

   22 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 30
    expr_term     go to state 21
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 7

   28 expr_term: NOT • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 31
    factor        go to state 23
    array_access  go to state 29


State 8

   41 factor: PI •

    $default  reduce using rule 41 (factor)


State 9

   42 factor: E •

    $default  reduce using rule 42 (factor)


State 10

   43 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 32
    expression_list  go to state 18
    expr_arithmetic  go to state 19
    expr_unary       go to state 20
    expr_term        go to state 21
    expr_bool        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 11

    9 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    repeat_expression  go to state 33
    expression         go to state 34
    expression_list    go to state 18
    expr_arithmetic    go to state 19
    expr_unary         go to state 20
    expr_term          go to state 21
    expr_bool          go to state 22
    factor             go to state 23
    array_access       go to state 29


State 12

    0 $accept: program • $end

    $end  shift, and go to state 35


State 13

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 14

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 36
    COMMENT  shift, and go to state 37

    $default  reduce using rule 3 (statement_list)


State 15

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 16

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 17

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 18

   13 expression: expression_list •
   14 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 38

    $default  reduce using rule 13 (expression)


State 19

   15 expression_list: expr_arithmetic •
   17 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   18                | expr_arithmetic • MINUS expr_unary
   19                | expr_arithmetic • OR expr_unary

    PLUS   shift, and go to state 39
    MINUS  shift, and go to state 40
    OR     shift, and go to state 41

    $default  reduce using rule 15 (expression_list)


State 20

   16 expr_arithmetic: expr_unary •
   23 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 42

    $default  reduce using rule 16 (expr_arithmetic)


State 21

   20 expr_unary: expr_term •
   25 expr_term: expr_term • MULT expr_bool
   26          | expr_term • DIV expr_bool
   27          | expr_term • MOD expr_bool

    MULT  shift, and go to state 43
    DIV   shift, and go to state 44
    MOD   shift, and go to state 45

    $default  reduce using rule 20 (expr_unary)


State 22

   24 expr_term: expr_bool •
   30 expr_bool: expr_bool • GT factor
   31          | expr_bool • LT factor
   32          | expr_bool • GE factor
   33          | expr_bool • LE factor
   34          | expr_bool • EQ factor
   35          | expr_bool • NE factor

    GT  shift, and go to state 46
    GE  shift, and go to state 47
    LT  shift, and go to state 48
    LE  shift, and go to state 49
    EQ  shift, and go to state 50
    NE  shift, and go to state 51

    $default  reduce using rule 24 (expr_term)


State 23

   29 expr_bool: factor •

    $default  reduce using rule 29 (expr_bool)


State 24

   12 assignment: array_access • ASSIGN expression
   36 factor: array_access •

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 36 (factor)


State 25

   11 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 53
    expression_list  go to state 18
    expr_arithmetic  go to state 19
    expr_unary       go to state 20
    expr_term        go to state 21
    expr_bool        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 26

   44 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_arithmetic  go to state 54
    expr_unary       go to state 20
    expr_term        go to state 21
    expr_bool        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 27

   37 factor: ID •
   44 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 37 (factor)


State 28

   21 expr_unary: PLUS expr_unary •
   23           | expr_unary • AND expr_term

    $default  reduce using rule 21 (expr_unary)


State 29

   36 factor: array_access •

    $default  reduce using rule 36 (factor)


State 30

   22 expr_unary: MINUS expr_unary •
   23           | expr_unary • AND expr_term

    $default  reduce using rule 22 (expr_unary)


State 31

   28 expr_term: NOT expr_bool •
   30 expr_bool: expr_bool • GT factor
   31          | expr_bool • LT factor
   32          | expr_bool • GE factor
   33          | expr_bool • LE factor
   34          | expr_bool • EQ factor
   35          | expr_bool • NE factor

    GT  shift, and go to state 46
    GE  shift, and go to state 47
    LT  shift, and go to state 48
    LE  shift, and go to state 49
    EQ  shift, and go to state 50
    NE  shift, and go to state 51

    $default  reduce using rule 28 (expr_term)


State 32

   43 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 55


State 33

    9 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 56


State 34

   10 repeat_expression: expression •

    $default  reduce using rule 10 (repeat_expression)


State 35

    0 $accept: program $end •

    $default  accept


State 36

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11

    $default  reduce using rule 8 (statement)

    statement_list    go to state 57
    statement         go to state 14
    repeat_statement  go to state 15
    assignment        go to state 16
    expression        go to state 17
    expression_list   go to state 18
    expr_arithmetic   go to state 19
    expr_unary        go to state 20
    expr_term         go to state 21
    expr_bool         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 37

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 38

   14 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_arithmetic  go to state 58
    expr_unary       go to state 20
    expr_term        go to state 21
    expr_bool        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 39

   17 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 59
    expr_term     go to state 21
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 40

   18 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 60
    expr_term     go to state 21
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 41

   19 expr_arithmetic: expr_arithmetic OR • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_unary    go to state 61
    expr_term     go to state 21
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 42

   23 expr_unary: expr_unary AND • expr_term

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_term     go to state 62
    expr_bool     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 43

   25 expr_term: expr_term MULT • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 63
    factor        go to state 23
    array_access  go to state 29


State 44

   26 expr_term: expr_term DIV • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 64
    factor        go to state 23
    array_access  go to state 29


State 45

   27 expr_term: expr_term MOD • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expr_bool     go to state 65
    factor        go to state 23
    array_access  go to state 29


State 46

   30 expr_bool: expr_bool GT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 66
    array_access  go to state 29


State 47

   32 expr_bool: expr_bool GE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 67
    array_access  go to state 29


State 48

   31 expr_bool: expr_bool LT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 68
    array_access  go to state 29


State 49

   33 expr_bool: expr_bool LE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 69
    array_access  go to state 29


State 50

   34 expr_bool: expr_bool EQ • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 70
    array_access  go to state 29


State 51

   35 expr_bool: expr_bool NE • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    factor        go to state 71
    array_access  go to state 29


State 52

   12 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10

    expression       go to state 72
    expression_list  go to state 18
    expr_arithmetic  go to state 19
    expr_unary       go to state 20
    expr_term        go to state 21
    expr_bool        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 53

   11 assignment: ID ASSIGN expression •

    $default  reduce using rule 11 (assignment)


State 54

   17 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   18                | expr_arithmetic • MINUS expr_unary
   19                | expr_arithmetic • OR expr_unary
   44 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 39
    MINUS     shift, and go to state 40
    OR        shift, and go to state 41
    RBRACKET  shift, and go to state 73


State 55

   43 factor: LPAREN expression RPAREN •

    $default  reduce using rule 43 (factor)


State 56

    9 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 7
    PI       shift, and go to state 8
    E        shift, and go to state 9
    LPAREN   shift, and go to state 10
    REPEAT   shift, and go to state 11

    $default  reduce using rule 8 (statement)

    statement_list    go to state 74
    statement         go to state 14
    repeat_statement  go to state 15
    assignment        go to state 16
    expression        go to state 17
    expression_list   go to state 18
    expr_arithmetic   go to state 19
    expr_unary        go to state 20
    expr_term         go to state 21
    expr_bool         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 57

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 58

   14 expression_list: expression_list COMMA expr_arithmetic •
   17 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   18                | expr_arithmetic • MINUS expr_unary
   19                | expr_arithmetic • OR expr_unary

    PLUS   shift, and go to state 39
    MINUS  shift, and go to state 40
    OR     shift, and go to state 41

    $default  reduce using rule 14 (expression_list)


State 59

   17 expr_arithmetic: expr_arithmetic PLUS expr_unary •
   23 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 42

    $default  reduce using rule 17 (expr_arithmetic)


State 60

   18 expr_arithmetic: expr_arithmetic MINUS expr_unary •
   23 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 42

    $default  reduce using rule 18 (expr_arithmetic)


State 61

   19 expr_arithmetic: expr_arithmetic OR expr_unary •
   23 expr_unary: expr_unary • AND expr_term

    AND  shift, and go to state 42

    $default  reduce using rule 19 (expr_arithmetic)


State 62

   23 expr_unary: expr_unary AND expr_term •
   25 expr_term: expr_term • MULT expr_bool
   26          | expr_term • DIV expr_bool
   27          | expr_term • MOD expr_bool

    MULT  shift, and go to state 43
    DIV   shift, and go to state 44
    MOD   shift, and go to state 45

    $default  reduce using rule 23 (expr_unary)


State 63

   25 expr_term: expr_term MULT expr_bool •
   30 expr_bool: expr_bool • GT factor
   31          | expr_bool • LT factor
   32          | expr_bool • GE factor
   33          | expr_bool • LE factor
   34          | expr_bool • EQ factor
   35          | expr_bool • NE factor

    GT  shift, and go to state 46
    GE  shift, and go to state 47
    LT  shift, and go to state 48
    LE  shift, and go to state 49
    EQ  shift, and go to state 50
    NE  shift, and go to state 51

    $default  reduce using rule 25 (expr_term)


State 64

   26 expr_term: expr_term DIV expr_bool •
   30 expr_bool: expr_bool • GT factor
   31          | expr_bool • LT factor
   32          | expr_bool • GE factor
   33          | expr_bool • LE factor
   34          | expr_bool • EQ factor
   35          | expr_bool • NE factor

    GT  shift, and go to state 46
    GE  shift, and go to state 47
    LT  shift, and go to state 48
    LE  shift, and go to state 49
    EQ  shift, and go to state 50
    NE  shift, and go to state 51

    $default  reduce using rule 26 (expr_term)


State 65

   27 expr_term: expr_term MOD expr_bool •
   30 expr_bool: expr_bool • GT factor
   31          | expr_bool • LT factor
   32          | expr_bool • GE factor
   33          | expr_bool • LE factor
   34          | expr_bool • EQ factor
   35          | expr_bool • NE factor

    GT  shift, and go to state 46
    GE  shift, and go to state 47
    LT  shift, and go to state 48
    LE  shift, and go to state 49
    EQ  shift, and go to state 50
    NE  shift, and go to state 51

    $default  reduce using rule 27 (expr_term)


State 66

   30 expr_bool: expr_bool GT factor •

    $default  reduce using rule 30 (expr_bool)


State 67

   32 expr_bool: expr_bool GE factor •

    $default  reduce using rule 32 (expr_bool)


State 68

   31 expr_bool: expr_bool LT factor •

    $default  reduce using rule 31 (expr_bool)


State 69

   33 expr_bool: expr_bool LE factor •

    $default  reduce using rule 33 (expr_bool)


State 70

   34 expr_bool: expr_bool EQ factor •

    $default  reduce using rule 34 (expr_bool)


State 71

   35 expr_bool: expr_bool NE factor •

    $default  reduce using rule 35 (expr_bool)


State 72

   12 assignment: array_access ASSIGN expression •

    $default  reduce using rule 12 (assignment)


State 73

   44 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 44 (array_access)


State 74

    9 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 75


State 75

    9 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 9 (repeat_statement)
