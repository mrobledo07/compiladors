Terminals unused in grammar

    BOOLEAN
    DOT
    ELSE
    SWITCH
    CASE
    DEFAULT
    BREAK
    FSWITCH
    WHILE
    UNTIL
    FOR
    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | if_statement
    9          | ε

   10 if_statement: IF expression_bool THEN marker statement_list FI marker

   11 expression_bool: expr_bool_and
   12                | expression_bool OR marker expr_bool_and

   13 expr_bool_and: expr_bool_not
   14              | expr_bool_and AND marker expr_bool_not

   15 marker: ε

   16 expr_bool_not: expr_bool
   17              | NOT expr_bool

   18 expr_bool: expression EQ expression
   19          | expression NE expression
   20          | expression GT expression
   21          | expression GE expression
   22          | expression LT expression
   23          | expression LE expression

   24 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   25 repeat_expression: expression

   26 assignment: ID ASSIGN expression
   27           | array_access ASSIGN expression

   28 expression: expression_list

   29 expression_list: expression_list COMMA expr_arithmetic
   30                | expr_arithmetic

   31 expr_arithmetic: expr_unary
   32                | expr_arithmetic PLUS expr_unary
   33                | expr_arithmetic MINUS expr_unary

   34 expr_unary: expr_term
   35           | PLUS expr_unary
   36           | MINUS expr_unary

   37 expr_term: factor
   38          | expr_term MULT factor
   39          | expr_term DIV factor
   40          | expr_term MOD factor

   41 factor: array_access
   42       | ID
   43       | INTEGER
   44       | STRING
   45       | REAL
   46       | PI
   47       | E
   48       | LPAREN expression RPAREN

   49 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 26 27
    ENDLINE <no_value> (259) 2
    INTEGER <integer> (260) 43
    ID <ident> (261) 26 42 49
    REAL <real> (262) 45
    STRING <string> (263) 44
    BOOLEAN <boolean> (264)
    PLUS (265) 32 35
    MINUS (266) 33 36
    MULT (267) 38
    DIV (268) 39
    MOD (269) 40
    GT (270) 20
    GE (271) 21
    LT (272) 22
    LE (273) 23
    EQ (274) 18
    NE (275) 19
    NOT (276) 17
    AND (277) 14
    OR (278) 12
    PI (279) 46
    E (280) 47
    LBRACKET (281) 49
    RBRACKET (282) 49
    LPAREN (283) 48
    RPAREN (284) 48
    COMMA (285) 29
    DOT (286)
    COMMENT (287) 6
    REPEAT <ident> (288) 24
    DO (289) 24
    DONE (290) 24
    IF <ident> (291) 10
    THEN (292) 10
    ELSE (293)
    FI (294) 10
    SWITCH (295)
    CASE (296)
    DEFAULT (297)
    BREAK (298)
    FSWITCH (299)
    WHILE (300)
    UNTIL (301)
    FOR (302)
    IN (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statement_list (51)
        on left: 2 3
        on right: 1 2 10 24
    statement (52)
        on left: 4 5 6 7 8 9
        on right: 2 3 6
    if_statement <ident> (53)
        on left: 10
        on right: 8
    expression_bool <ident> (54)
        on left: 11 12
        on right: 10 12
    expr_bool_and <ident> (55)
        on left: 13 14
        on right: 11 12 14
    marker <marker> (56)
        on left: 15
        on right: 10 12 14
    expr_bool_not <ident> (57)
        on left: 16 17
        on right: 13 14
    expr_bool <ident> (58)
        on left: 18 19 20 21 22 23
        on right: 16 17
    repeat_statement (59)
        on left: 24
        on right: 7
    repeat_expression <ident> (60)
        on left: 25
        on right: 24
    assignment (61)
        on left: 26 27
        on right: 4
    expression <ident> (62)
        on left: 28
        on right: 5 18 19 20 21 22 23 25 26 27 48
    expression_list <ident> (63)
        on left: 29 30
        on right: 28 29
    expr_arithmetic <ident> (64)
        on left: 31 32 33
        on right: 29 30 32 33 49
    expr_unary <ident> (65)
        on left: 34 35 36
        on right: 31 32 33 35 36
    expr_term <ident> (66)
        on left: 37 38 39 40
        on right: 34 38 39 40
    factor <ident> (67)
        on left: 41 42 43 44 45 46 47 48
        on right: 37 38 39 40
    array_access <ident> (68)
        on left: 49
        on right: 27 41


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    program           go to state 12
    statement_list    go to state 13
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 1

   43 factor: INTEGER •

    $default  reduce using rule 43 (factor)


State 2

   26 assignment: ID • ASSIGN expression
   42 factor: ID •
   49 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 25
    LBRACKET  shift, and go to state 26

    $default  reduce using rule 42 (factor)


State 3

   45 factor: REAL •

    $default  reduce using rule 45 (factor)


State 4

   44 factor: STRING •

    $default  reduce using rule 44 (factor)


State 5

   35 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 28
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 6

   36 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 30
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 7

   46 factor: PI •

    $default  reduce using rule 46 (factor)


State 8

   47 factor: E •

    $default  reduce using rule 47 (factor)


State 9

   48 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 31
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 10

   24 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    repeat_expression  go to state 32
    expression         go to state 33
    expression_list    go to state 19
    expr_arithmetic    go to state 20
    expr_unary         go to state 21
    expr_term          go to state 22
    factor             go to state 23
    array_access       go to state 29


State 11

   10 if_statement: IF • expression_bool THEN marker statement_list FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression_bool  go to state 35
    expr_bool_and    go to state 36
    expr_bool_not    go to state 37
    expr_bool        go to state 38
    expression       go to state 39
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 12

    0 $accept: program • $end

    $end  shift, and go to state 40


State 13

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 14

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 41
    COMMENT  shift, and go to state 42

    $default  reduce using rule 3 (statement_list)


State 15

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 16

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 17

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 18

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 19

   28 expression: expression_list •
   29 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 43

    $default  reduce using rule 28 (expression)


State 20

   30 expression_list: expr_arithmetic •
   32 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   33                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 30 (expression_list)


State 21

   31 expr_arithmetic: expr_unary •

    $default  reduce using rule 31 (expr_arithmetic)


State 22

   34 expr_unary: expr_term •
   38 expr_term: expr_term • MULT factor
   39          | expr_term • DIV factor
   40          | expr_term • MOD factor

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47
    MOD   shift, and go to state 48

    $default  reduce using rule 34 (expr_unary)


State 23

   37 expr_term: factor •

    $default  reduce using rule 37 (expr_term)


State 24

   27 assignment: array_access • ASSIGN expression
   41 factor: array_access •

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 41 (factor)


State 25

   26 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 50
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 26

   49 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 51
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 27

   42 factor: ID •
   49 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 42 (factor)


State 28

   35 expr_unary: PLUS expr_unary •

    $default  reduce using rule 35 (expr_unary)


State 29

   41 factor: array_access •

    $default  reduce using rule 41 (factor)


State 30

   36 expr_unary: MINUS expr_unary •

    $default  reduce using rule 36 (expr_unary)


State 31

   48 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 52


State 32

   24 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 53


State 33

   25 repeat_expression: expression •

    $default  reduce using rule 25 (repeat_expression)


State 34

   17 expr_bool_not: NOT • expr_bool

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_bool        go to state 54
    expression       go to state 39
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 35

   10 if_statement: IF expression_bool • THEN marker statement_list FI marker
   12 expression_bool: expression_bool • OR marker expr_bool_and

    OR    shift, and go to state 55
    THEN  shift, and go to state 56


State 36

   11 expression_bool: expr_bool_and •
   14 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 57

    $default  reduce using rule 11 (expression_bool)


State 37

   13 expr_bool_and: expr_bool_not •

    $default  reduce using rule 13 (expr_bool_and)


State 38

   16 expr_bool_not: expr_bool •

    $default  reduce using rule 16 (expr_bool_not)


State 39

   18 expr_bool: expression • EQ expression
   19          | expression • NE expression
   20          | expression • GT expression
   21          | expression • GE expression
   22          | expression • LT expression
   23          | expression • LE expression

    GT  shift, and go to state 58
    GE  shift, and go to state 59
    LT  shift, and go to state 60
    LE  shift, and go to state 61
    EQ  shift, and go to state 62
    NE  shift, and go to state 63


State 40

    0 $accept: program $end •

    $default  accept


State 41

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 64
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 42

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 43

   29 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 65
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 44

   32 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 66
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 45

   33 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 67
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 46

   38 expr_term: expr_term MULT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 68
    array_access  go to state 29


State 47

   39 expr_term: expr_term DIV • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 69
    array_access  go to state 29


State 48

   40 expr_term: expr_term MOD • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 70
    array_access  go to state 29


State 49

   27 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 71
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 50

   26 assignment: ID ASSIGN expression •

    $default  reduce using rule 26 (assignment)


State 51

   32 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   33                | expr_arithmetic • MINUS expr_unary
   49 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    RBRACKET  shift, and go to state 72


State 52

   48 factor: LPAREN expression RPAREN •

    $default  reduce using rule 48 (factor)


State 53

   24 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 73
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 54

   17 expr_bool_not: NOT expr_bool •

    $default  reduce using rule 17 (expr_bool_not)


State 55

   12 expression_bool: expression_bool OR • marker expr_bool_and

    $default  reduce using rule 15 (marker)

    marker  go to state 74


State 56

   10 if_statement: IF expression_bool THEN • marker statement_list FI marker

    $default  reduce using rule 15 (marker)

    marker  go to state 75


State 57

   14 expr_bool_and: expr_bool_and AND • marker expr_bool_not

    $default  reduce using rule 15 (marker)

    marker  go to state 76


State 58

   20 expr_bool: expression GT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 77
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 59

   21 expr_bool: expression GE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 78
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 60

   22 expr_bool: expression LT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 79
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 61

   23 expr_bool: expression LE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 80
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 62

   18 expr_bool: expression EQ • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 81
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 63

   19 expr_bool: expression NE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 82
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 64

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 65

   29 expression_list: expression_list COMMA expr_arithmetic •
   32 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   33                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 29 (expression_list)


State 66

   32 expr_arithmetic: expr_arithmetic PLUS expr_unary •

    $default  reduce using rule 32 (expr_arithmetic)


State 67

   33 expr_arithmetic: expr_arithmetic MINUS expr_unary •

    $default  reduce using rule 33 (expr_arithmetic)


State 68

   38 expr_term: expr_term MULT factor •

    $default  reduce using rule 38 (expr_term)


State 69

   39 expr_term: expr_term DIV factor •

    $default  reduce using rule 39 (expr_term)


State 70

   40 expr_term: expr_term MOD factor •

    $default  reduce using rule 40 (expr_term)


State 71

   27 assignment: array_access ASSIGN expression •

    $default  reduce using rule 27 (assignment)


State 72

   49 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 49 (array_access)


State 73

   24 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 83


State 74

   12 expression_bool: expression_bool OR marker • expr_bool_and

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_bool_and    go to state 84
    expr_bool_not    go to state 37
    expr_bool        go to state 38
    expression       go to state 39
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 75

   10 if_statement: IF expression_bool THEN marker • statement_list FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 85
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 76

   14 expr_bool_and: expr_bool_and AND marker • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_bool_not    go to state 86
    expr_bool        go to state 38
    expression       go to state 39
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 77

   20 expr_bool: expression GT expression •

    $default  reduce using rule 20 (expr_bool)


State 78

   21 expr_bool: expression GE expression •

    $default  reduce using rule 21 (expr_bool)


State 79

   22 expr_bool: expression LT expression •

    $default  reduce using rule 22 (expr_bool)


State 80

   23 expr_bool: expression LE expression •

    $default  reduce using rule 23 (expr_bool)


State 81

   18 expr_bool: expression EQ expression •

    $default  reduce using rule 18 (expr_bool)


State 82

   19 expr_bool: expression NE expression •

    $default  reduce using rule 19 (expr_bool)


State 83

   24 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 24 (repeat_statement)


State 84

   12 expression_bool: expression_bool OR marker expr_bool_and •
   14 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 57

    $default  reduce using rule 12 (expression_bool)


State 85

   10 if_statement: IF expression_bool THEN marker statement_list • FI marker

    FI  shift, and go to state 87


State 86

   14 expr_bool_and: expr_bool_and AND marker expr_bool_not •

    $default  reduce using rule 14 (expr_bool_and)


State 87

   10 if_statement: IF expression_bool THEN marker statement_list FI • marker

    $default  reduce using rule 15 (marker)

    marker  go to state 88


State 88

   10 if_statement: IF expression_bool THEN marker statement_list FI marker •

    $default  reduce using rule 10 (if_statement)
