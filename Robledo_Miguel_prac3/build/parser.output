Terminals unused in grammar

    BOOLEAN
    DOT
    ELSE
    SWITCH
    CASE
    DEFAULT
    BREAK
    FSWITCH
    WHILE
    UNTIL
    FOR
    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement ENDLINE statement_list
    3               | statement

    4 statement: assignment
    5          | expression
    6          | statement COMMENT
    7          | repeat_statement
    8          | if_statement
    9          | ε

   10 if_statement: IF expression_bool THEN marker statement_list FI marker

   11 expression_bool: expr_bool_and
   12                | expression_bool OR marker expr_bool_and

   13 expr_bool_and: expr_bool_not
   14              | expr_bool_and AND marker expr_bool_not

   15 marker: ε

   16 expr_bool_not: NOT expr_bool_not
   17              | primary_bool

   18 primary_bool: LPAREN expression_bool RPAREN
   19             | expr_bool

   20 expr_bool: expression EQ expression
   21          | expression NE expression
   22          | expression GT expression
   23          | expression GE expression
   24          | expression LT expression
   25          | expression LE expression

   26 repeat_statement: REPEAT repeat_expression DO statement_list DONE

   27 repeat_expression: expression

   28 assignment: ID ASSIGN expression
   29           | array_access ASSIGN expression

   30 expression: expression_list

   31 expression_list: expression_list COMMA expr_arithmetic
   32                | expr_arithmetic

   33 expr_arithmetic: expr_unary
   34                | expr_arithmetic PLUS expr_unary
   35                | expr_arithmetic MINUS expr_unary

   36 expr_unary: expr_term
   37           | PLUS expr_unary
   38           | MINUS expr_unary

   39 expr_term: factor
   40          | expr_term MULT factor
   41          | expr_term DIV factor
   42          | expr_term MOD factor

   43 factor: array_access
   44       | ID
   45       | INTEGER
   46       | STRING
   47       | REAL
   48       | PI
   49       | E
   50       | LPAREN expression RPAREN

   51 array_access: ID LBRACKET expr_arithmetic RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <no_value> (258) 28 29
    ENDLINE <no_value> (259) 2
    INTEGER <integer> (260) 45
    ID <ident> (261) 28 44 51
    REAL <real> (262) 47
    STRING <string> (263) 46
    BOOLEAN <boolean> (264)
    PLUS (265) 34 37
    MINUS (266) 35 38
    MULT (267) 40
    DIV (268) 41
    MOD (269) 42
    GT (270) 22
    GE (271) 23
    LT (272) 24
    LE (273) 25
    EQ (274) 20
    NE (275) 21
    NOT (276) 16
    AND (277) 14
    OR (278) 12
    PI (279) 48
    E (280) 49
    LBRACKET (281) 51
    RBRACKET (282) 51
    LPAREN (283) 18 50
    RPAREN (284) 18 50
    COMMA (285) 31
    DOT (286)
    COMMENT (287) 6
    REPEAT <ident> (288) 26
    DO (289) 26
    DONE (290) 26
    IF <ident> (291) 10
    THEN (292) 10
    ELSE (293)
    FI (294) 10
    SWITCH (295)
    CASE (296)
    DEFAULT (297)
    BREAK (298)
    FSWITCH (299)
    WHILE (300)
    UNTIL (301)
    FOR (302)
    IN (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statement_list (51)
        on left: 2 3
        on right: 1 2 10 26
    statement (52)
        on left: 4 5 6 7 8 9
        on right: 2 3 6
    if_statement <ident> (53)
        on left: 10
        on right: 8
    expression_bool <ident> (54)
        on left: 11 12
        on right: 10 12 18
    expr_bool_and <ident> (55)
        on left: 13 14
        on right: 11 12 14
    marker <marker> (56)
        on left: 15
        on right: 10 12 14
    expr_bool_not <ident> (57)
        on left: 16 17
        on right: 13 14 16
    primary_bool <ident> (58)
        on left: 18 19
        on right: 17
    expr_bool <ident> (59)
        on left: 20 21 22 23 24 25
        on right: 19
    repeat_statement (60)
        on left: 26
        on right: 7
    repeat_expression <ident> (61)
        on left: 27
        on right: 26
    assignment (62)
        on left: 28 29
        on right: 4
    expression <ident> (63)
        on left: 30
        on right: 5 20 21 22 23 24 25 27 28 29 50
    expression_list <ident> (64)
        on left: 31 32
        on right: 30 31
    expr_arithmetic <ident> (65)
        on left: 33 34 35
        on right: 31 32 34 35 51
    expr_unary <ident> (66)
        on left: 36 37 38
        on right: 33 34 35 37 38
    expr_term <ident> (67)
        on left: 39 40 41 42
        on right: 36 40 41 42
    factor <ident> (68)
        on left: 43 44 45 46 47 48 49 50
        on right: 39 40 41 42
    array_access <ident> (69)
        on left: 51
        on right: 29 43


State 0

    0 $accept: • program $end

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    program           go to state 12
    statement_list    go to state 13
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 1

   45 factor: INTEGER •

    $default  reduce using rule 45 (factor)


State 2

   28 assignment: ID • ASSIGN expression
   44 factor: ID •
   51 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    ASSIGN    shift, and go to state 25
    LBRACKET  shift, and go to state 26

    $default  reduce using rule 44 (factor)


State 3

   47 factor: REAL •

    $default  reduce using rule 47 (factor)


State 4

   46 factor: STRING •

    $default  reduce using rule 46 (factor)


State 5

   37 expr_unary: PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 28
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 6

   38 expr_unary: MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 30
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 7

   48 factor: PI •

    $default  reduce using rule 48 (factor)


State 8

   49 factor: E •

    $default  reduce using rule 49 (factor)


State 9

   50 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 31
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 10

   26 repeat_statement: REPEAT • repeat_expression DO statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    repeat_expression  go to state 32
    expression         go to state 33
    expression_list    go to state 19
    expr_arithmetic    go to state 20
    expr_unary         go to state 21
    expr_term          go to state 22
    factor             go to state 23
    array_access       go to state 29


State 11

   10 if_statement: IF • expression_bool THEN marker statement_list FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 35

    expression_bool  go to state 36
    expr_bool_and    go to state 37
    expr_bool_not    go to state 38
    primary_bool     go to state 39
    expr_bool        go to state 40
    expression       go to state 41
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 12

    0 $accept: program • $end

    $end  shift, and go to state 42


State 13

    1 program: statement_list •

    $default  reduce using rule 1 (program)


State 14

    2 statement_list: statement • ENDLINE statement_list
    3               | statement •
    6 statement: statement • COMMENT

    ENDLINE  shift, and go to state 43
    COMMENT  shift, and go to state 44

    $default  reduce using rule 3 (statement_list)


State 15

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 16

    7 statement: repeat_statement •

    $default  reduce using rule 7 (statement)


State 17

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 18

    5 statement: expression •

    $default  reduce using rule 5 (statement)


State 19

   30 expression: expression_list •
   31 expression_list: expression_list • COMMA expr_arithmetic

    COMMA  shift, and go to state 45

    $default  reduce using rule 30 (expression)


State 20

   32 expression_list: expr_arithmetic •
   34 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   35                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 46
    MINUS  shift, and go to state 47

    $default  reduce using rule 32 (expression_list)


State 21

   33 expr_arithmetic: expr_unary •

    $default  reduce using rule 33 (expr_arithmetic)


State 22

   36 expr_unary: expr_term •
   40 expr_term: expr_term • MULT factor
   41          | expr_term • DIV factor
   42          | expr_term • MOD factor

    MULT  shift, and go to state 48
    DIV   shift, and go to state 49
    MOD   shift, and go to state 50

    $default  reduce using rule 36 (expr_unary)


State 23

   39 expr_term: factor •

    $default  reduce using rule 39 (expr_term)


State 24

   29 assignment: array_access • ASSIGN expression
   43 factor: array_access •

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 43 (factor)


State 25

   28 assignment: ID ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 52
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 26

   51 array_access: ID LBRACKET • expr_arithmetic RBRACKET

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 53
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 27

   44 factor: ID •
   51 array_access: ID • LBRACKET expr_arithmetic RBRACKET

    LBRACKET  shift, and go to state 26

    $default  reduce using rule 44 (factor)


State 28

   37 expr_unary: PLUS expr_unary •

    $default  reduce using rule 37 (expr_unary)


State 29

   43 factor: array_access •

    $default  reduce using rule 43 (factor)


State 30

   38 expr_unary: MINUS expr_unary •

    $default  reduce using rule 38 (expr_unary)


State 31

   50 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 54


State 32

   26 repeat_statement: REPEAT repeat_expression • DO statement_list DONE

    DO  shift, and go to state 55


State 33

   27 repeat_expression: expression •

    $default  reduce using rule 27 (repeat_expression)


State 34

   16 expr_bool_not: NOT • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 35

    expr_bool_not    go to state 56
    primary_bool     go to state 39
    expr_bool        go to state 40
    expression       go to state 41
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 35

   18 primary_bool: LPAREN • expression_bool RPAREN
   50 factor: LPAREN • expression RPAREN

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 35

    expression_bool  go to state 57
    expr_bool_and    go to state 37
    expr_bool_not    go to state 38
    primary_bool     go to state 39
    expr_bool        go to state 40
    expression       go to state 58
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 36

   10 if_statement: IF expression_bool • THEN marker statement_list FI marker
   12 expression_bool: expression_bool • OR marker expr_bool_and

    OR    shift, and go to state 59
    THEN  shift, and go to state 60


State 37

   11 expression_bool: expr_bool_and •
   14 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 61

    $default  reduce using rule 11 (expression_bool)


State 38

   13 expr_bool_and: expr_bool_not •

    $default  reduce using rule 13 (expr_bool_and)


State 39

   17 expr_bool_not: primary_bool •

    $default  reduce using rule 17 (expr_bool_not)


State 40

   19 primary_bool: expr_bool •

    $default  reduce using rule 19 (primary_bool)


State 41

   20 expr_bool: expression • EQ expression
   21          | expression • NE expression
   22          | expression • GT expression
   23          | expression • GE expression
   24          | expression • LT expression
   25          | expression • LE expression

    GT  shift, and go to state 62
    GE  shift, and go to state 63
    LT  shift, and go to state 64
    LE  shift, and go to state 65
    EQ  shift, and go to state 66
    NE  shift, and go to state 67


State 42

    0 $accept: program $end •

    $default  accept


State 43

    2 statement_list: statement ENDLINE • statement_list

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 68
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 44

    6 statement: statement COMMENT •

    $default  reduce using rule 6 (statement)


State 45

   31 expression_list: expression_list COMMA • expr_arithmetic

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_arithmetic  go to state 69
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 46

   34 expr_arithmetic: expr_arithmetic PLUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 70
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 47

   35 expr_arithmetic: expr_arithmetic MINUS • expr_unary

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expr_unary    go to state 71
    expr_term     go to state 22
    factor        go to state 23
    array_access  go to state 29


State 48

   40 expr_term: expr_term MULT • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 72
    array_access  go to state 29


State 49

   41 expr_term: expr_term DIV • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 73
    array_access  go to state 29


State 50

   42 expr_term: expr_term MOD • factor

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    factor        go to state 74
    array_access  go to state 29


State 51

   29 assignment: array_access ASSIGN • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 75
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 52

   28 assignment: ID ASSIGN expression •

    $default  reduce using rule 28 (assignment)


State 53

   34 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   35                | expr_arithmetic • MINUS expr_unary
   51 array_access: ID LBRACKET expr_arithmetic • RBRACKET

    PLUS      shift, and go to state 46
    MINUS     shift, and go to state 47
    RBRACKET  shift, and go to state 76


State 54

   50 factor: LPAREN expression RPAREN •

    $default  reduce using rule 50 (factor)


State 55

   26 repeat_statement: REPEAT repeat_expression DO • statement_list DONE

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 77
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 56

   16 expr_bool_not: NOT expr_bool_not •

    $default  reduce using rule 16 (expr_bool_not)


State 57

   12 expression_bool: expression_bool • OR marker expr_bool_and
   18 primary_bool: LPAREN expression_bool • RPAREN

    OR      shift, and go to state 59
    RPAREN  shift, and go to state 78


State 58

   20 expr_bool: expression • EQ expression
   21          | expression • NE expression
   22          | expression • GT expression
   23          | expression • GE expression
   24          | expression • LT expression
   25          | expression • LE expression
   50 factor: LPAREN expression • RPAREN

    GT      shift, and go to state 62
    GE      shift, and go to state 63
    LT      shift, and go to state 64
    LE      shift, and go to state 65
    EQ      shift, and go to state 66
    NE      shift, and go to state 67
    RPAREN  shift, and go to state 54


State 59

   12 expression_bool: expression_bool OR • marker expr_bool_and

    $default  reduce using rule 15 (marker)

    marker  go to state 79


State 60

   10 if_statement: IF expression_bool THEN • marker statement_list FI marker

    $default  reduce using rule 15 (marker)

    marker  go to state 80


State 61

   14 expr_bool_and: expr_bool_and AND • marker expr_bool_not

    $default  reduce using rule 15 (marker)

    marker  go to state 81


State 62

   22 expr_bool: expression GT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 82
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 63

   23 expr_bool: expression GE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 83
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 64

   24 expr_bool: expression LT • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 84
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 65

   25 expr_bool: expression LE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 85
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 66

   20 expr_bool: expression EQ • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 86
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 67

   21 expr_bool: expression NE • expression

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9

    expression       go to state 87
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 68

    2 statement_list: statement ENDLINE statement_list •

    $default  reduce using rule 2 (statement_list)


State 69

   31 expression_list: expression_list COMMA expr_arithmetic •
   34 expr_arithmetic: expr_arithmetic • PLUS expr_unary
   35                | expr_arithmetic • MINUS expr_unary

    PLUS   shift, and go to state 46
    MINUS  shift, and go to state 47

    $default  reduce using rule 31 (expression_list)


State 70

   34 expr_arithmetic: expr_arithmetic PLUS expr_unary •

    $default  reduce using rule 34 (expr_arithmetic)


State 71

   35 expr_arithmetic: expr_arithmetic MINUS expr_unary •

    $default  reduce using rule 35 (expr_arithmetic)


State 72

   40 expr_term: expr_term MULT factor •

    $default  reduce using rule 40 (expr_term)


State 73

   41 expr_term: expr_term DIV factor •

    $default  reduce using rule 41 (expr_term)


State 74

   42 expr_term: expr_term MOD factor •

    $default  reduce using rule 42 (expr_term)


State 75

   29 assignment: array_access ASSIGN expression •

    $default  reduce using rule 29 (assignment)


State 76

   51 array_access: ID LBRACKET expr_arithmetic RBRACKET •

    $default  reduce using rule 51 (array_access)


State 77

   26 repeat_statement: REPEAT repeat_expression DO statement_list • DONE

    DONE  shift, and go to state 88


State 78

   18 primary_bool: LPAREN expression_bool RPAREN •

    $default  reduce using rule 18 (primary_bool)


State 79

   12 expression_bool: expression_bool OR marker • expr_bool_and

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 35

    expr_bool_and    go to state 89
    expr_bool_not    go to state 38
    primary_bool     go to state 39
    expr_bool        go to state 40
    expression       go to state 41
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 80

   10 if_statement: IF expression_bool THEN marker • statement_list FI marker

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 2
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 9
    REPEAT   shift, and go to state 10
    IF       shift, and go to state 11

    $default  reduce using rule 9 (statement)

    statement_list    go to state 90
    statement         go to state 14
    if_statement      go to state 15
    repeat_statement  go to state 16
    assignment        go to state 17
    expression        go to state 18
    expression_list   go to state 19
    expr_arithmetic   go to state 20
    expr_unary        go to state 21
    expr_term         go to state 22
    factor            go to state 23
    array_access      go to state 24


State 81

   14 expr_bool_and: expr_bool_and AND marker • expr_bool_not

    INTEGER  shift, and go to state 1
    ID       shift, and go to state 27
    REAL     shift, and go to state 3
    STRING   shift, and go to state 4
    PLUS     shift, and go to state 5
    MINUS    shift, and go to state 6
    NOT      shift, and go to state 34
    PI       shift, and go to state 7
    E        shift, and go to state 8
    LPAREN   shift, and go to state 35

    expr_bool_not    go to state 91
    primary_bool     go to state 39
    expr_bool        go to state 40
    expression       go to state 41
    expression_list  go to state 19
    expr_arithmetic  go to state 20
    expr_unary       go to state 21
    expr_term        go to state 22
    factor           go to state 23
    array_access     go to state 29


State 82

   22 expr_bool: expression GT expression •

    $default  reduce using rule 22 (expr_bool)


State 83

   23 expr_bool: expression GE expression •

    $default  reduce using rule 23 (expr_bool)


State 84

   24 expr_bool: expression LT expression •

    $default  reduce using rule 24 (expr_bool)


State 85

   25 expr_bool: expression LE expression •

    $default  reduce using rule 25 (expr_bool)


State 86

   20 expr_bool: expression EQ expression •

    $default  reduce using rule 20 (expr_bool)


State 87

   21 expr_bool: expression NE expression •

    $default  reduce using rule 21 (expr_bool)


State 88

   26 repeat_statement: REPEAT repeat_expression DO statement_list DONE •

    $default  reduce using rule 26 (repeat_statement)


State 89

   12 expression_bool: expression_bool OR marker expr_bool_and •
   14 expr_bool_and: expr_bool_and • AND marker expr_bool_not

    AND  shift, and go to state 61

    $default  reduce using rule 12 (expression_bool)


State 90

   10 if_statement: IF expression_bool THEN marker statement_list • FI marker

    FI  shift, and go to state 92


State 91

   14 expr_bool_and: expr_bool_and AND marker expr_bool_not •

    $default  reduce using rule 14 (expr_bool_and)


State 92

   10 if_statement: IF expression_bool THEN marker statement_list FI • marker

    $default  reduce using rule 15 (marker)

    marker  go to state 93


State 93

   10 if_statement: IF expression_bool THEN marker statement_list FI marker •

    $default  reduce using rule 10 (if_statement)
